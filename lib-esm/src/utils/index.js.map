{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/utils/index.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,QAAQ,CAAI,MAAS;IACnC,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACzB,gCAAgC;QAChC,+DAA+D;QAC/D,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;KAC7C;IAED,IAAI,MAAM,YAAY,IAAI,EAAE;QAC1B,gCAAgC;QAChC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;KACnC;IAED,IAAI,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QACxC,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,yBAAyB,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;aAC5F,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,CAAC,OAAO,UAAU,CAAC,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,WAAW,CAAC;aAC1F,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;QAEvB,MAAM,IAAI,GAA4B,EAAE,CAAC;QACzC,KAAK,MAAM,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE;YACtD,gCAAgC;YAChC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SACnC;QAED,gCAAgC;QAChC,OAAO,IAAI,CAAC;KACb;IAED,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["export function deepCopy<T>(object: T): T {\n  if (Array.isArray(object)) {\n    // @ts-expect-error: Unsafe type\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return object.map((item) => deepCopy(item));\n  }\n\n  if (object instanceof Date) {\n    // @ts-expect-error: Unsafe type\n    return new Date(object.getTime());\n  }\n\n  if (object && typeof object === 'object') {\n    const getters = Object.entries(Object.getOwnPropertyDescriptors(Object.getPrototypeOf(object)))\n      .filter(([key, descriptor]) => typeof descriptor.get === 'function' && key !== '__proto__')\n      .map(([key]) => key);\n\n    const copy: Record<string, unknown> = {};\n    for (const key of [...Object.keys(object), ...getters]) {\n      // @ts-expect-error: Unsafe type\n      copy[key] = deepCopy(object[key]);\n    }\n\n    // @ts-expect-error: Unsafe type\n    return copy;\n  }\n\n  return object;\n}\n"]}