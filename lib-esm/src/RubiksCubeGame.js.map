{"version":3,"file":"RubiksCubeGame.js","sourceRoot":"","sources":["../../src/RubiksCubeGame.ts"],"names":[],"mappings":";AAAA,sDAAsD;AACtD,0DAA0D;AAC1D,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAClD,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAE1C,OAAO,EAAE,gBAAgB,EAAE,MAAM,UAAU,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,UAAU,CAAC;AACvD,OAAO,KAAK,MAAM,mBAAmB,CAAC;AAEtC;;;GAGG;AACH,MAAM,OAAO,cAAe,SAAQ,UAAU;IAC5C,MAAM,KAAK,MAAM;QACf,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAKD;QACE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,MAAM,GAAG,IAAI,gBAAgB,CAChC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAC/B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CACjC,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,2DAA2D;QAC3D,IAAI,KAAK,CAAC,iBAAiB,EAAE;YAC3B,KAAK,CAAC,iBAAiB,EAAE,CAAC;SAC3B;QAED,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oBAAoB;QAClB,8DAA8D;QAC9D,IAAI,KAAK,CAAC,oBAAoB,EAAE;YAC9B,KAAK,CAAC,oBAAoB,EAAE,CAAC;SAC9B;IACH,CAAC;IAEO,UAAU;QAChB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;YACzB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,aAAa,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IACzD,CAAC;IAEO,gBAAgB;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,wBAAwB;QACtB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAED,MAAM;;QACJ,IAAI,CAAC,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,IAAI,CAAA,EAAE;YACtB,OAAO,IAAI,CAAA,YAAY,CAAC;SACzB;QAED,OAAO,IAAI,CAAA,0CAA0C,CAAC;IACxD,CAAC;CACF;AA5DC;IADC,KAAK,CAAC,EAAE,CAAC;8CACuB;AAqEnC,eAAe,cAAc,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/unbound-method */\n/* eslint-disable lit-a11y/click-events-have-key-events */\nimport { html, unsafeCSS, LitElement } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport { RubiksCubeEngine } from '@/engine';\nimport { GameWonEvent, GameLostEvent } from '@/events';\nimport Style from './rubiksCube.scss';\n\n/**\n * @fires {GameWonEvent} rubiksCube:game-won - User just won the game\n * @fires {GameLostEvent} rubiksCube:game-lost - User just lost the game\n */\nexport class RubiksCubeGame extends LitElement {\n  static get styles() {\n    return unsafeCSS(Style);\n  }\n\n  @state({})\n  private engine: RubiksCubeEngine;\n\n  constructor() {\n    super();\n\n    this.engine = new RubiksCubeEngine(\n      this.gameWonCallback.bind(this),\n      this.gameLostCallback.bind(this)\n    );\n  }\n\n  connectedCallback() {\n    // @ts-expect-error: super.connectedCallback always defined\n    if (super.connectedCallback) {\n      super.connectedCallback();\n    }\n\n    this.createCube();\n  }\n\n  disconnectedCallback() {\n    // @ts-expect-error: super.disconnectedCallback always defined\n    if (super.disconnectedCallback) {\n      super.disconnectedCallback();\n    }\n  }\n\n  private createCube() {\n    if (this.engine) {\n      this.engine.createCube();\n      this.requestUpdate();\n    }\n  }\n\n  private gameWonCallback() {\n    this.dispatchEvent(new GameWonEvent(this.engine.cube));\n  }\n\n  private gameLostCallback() {\n    this.dispatchEvent(new GameLostEvent(this.engine.cube));\n  }\n\n  setGameModeConfiguration() {\n    this.createCube();\n  }\n\n  restartGame() {\n    if (this.engine) {\n      this.engine.restart();\n      this.requestUpdate();\n    }\n  }\n\n  render() {\n    if (!this.engine?.cube) {\n      return html`No Cube :(`;\n    }\n\n    return html` <div class=\"cube-container\">Cube</div> `;\n  }\n}\n\ndeclare global {\n  interface GlobalEventHandlersEventMap {\n    'rubiks-cube:game-won': GameWonEvent;\n    'rubiks-cube:game-lost': GameLostEvent;\n  }\n}\n\nexport default RubiksCubeGame;\n"]}